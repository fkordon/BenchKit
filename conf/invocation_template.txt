set -x
# this is for BenchKit: configuration of major elements for the test
export BK_INPUT="__TEST_NAME__"
export BK_EXAMINATION="__EXAMINATION_TYPE__"
export BK_TOOL="__TOOL_NAME__"
export BK_RESULT_DIR="__OUTPUT_DIR__"
export BK_TIME_CONFINEMENT="__TIME_CONFINEMENT__"
export BK_MEMORY_CONFINEMENT="__MEMORY_MAX__"

# this is specific to your benchmark or test

export BIN_DIR="$HOME/BenchKit/bin"

# remove the execution directoty if it exists (to avoid increse of .vmdk images)
if [ -d execution ] ; then
	rm -rf execution
fi

tar xzf /home/mcc/BenchKit/INPUTS/__TEST_NAME__.tgz
mv __TEST_NAME__ execution

# this is for BenchKit: explicit launching of the test

cd execution
echo "====================================================================="
echo " Generated by BenchKit __BENCHKIT_VERSION__"
echo "    Executing tool __TOOL_NAME__"
echo "    Input is __TEST_NAME__, examination is __EXAMINATION_TYPE__"
echo "    Time confinement is $BK_TIME_CONFINEMENT seconds"
echo "    Memory confinement is __MEMORY_MAX__ MBytes"
echo "    Number of cores is __NBCORES__"
echo "    Run identifier is __BK_RID__"
echo "====================================================================="
echo
echo "--------------------"
echo "content from stdout:"
echo
echo "=== Data for post analysis generated by BenchKit (invocation template)"
echo
if [ "__EXAMINATION_TYPE__" = "UpperBounds" ] ; then
	echo "The expected result is a vector of positive values"
	echo NUM_VECTOR
elif [ "__EXAMINATION_TYPE__" != "StateSpace" ]  ; then 
	echo "The expected result is a vector of booleans"
	echo BOOL_VECTOR
else
	echo "no data necessary for post analysis"
fi
echo
if [ -f "__EXAMINATION_TYPE__.txt" ] ; then
	echo "here is the order used to build the result vector(from text file)"
	for x in $(grep Property __EXAMINATION_TYPE__.txt | cut -d ' ' -f 2 | sort -u) ; do
		echo "FORMULA_NAME $x"
	done
elif [ -f "__EXAMINATION_TYPE__.xml" ] ; then # for cunf (txt files deleted;-)
	echo echo "here is the order used to build the result vector(from xml file)"
	for x in $(grep '<id>' __EXAMINATION_TYPE__.xml | cut -d '>' -f 2 | cut -d '<' -f 1 | sort -u) ; do
		echo "FORMULA_NAME $x"
	done
fi
echo
echo "=== Now, execution of the tool begins"
echo
echo -n "BK_START "
date -u +%s%3N
echo
timeout -s 9 $BK_TIME_CONFINEMENT  bash -c "/home/mcc/BenchKit/BenchKit_head.sh 2> STDERR ; echo ; echo -n \"BK_STOP \" ; date -u +%s%3N"
if [ $? -eq 137 ] ; then
	echo
	echo "BK_TIME_CONFINEMENT_REACHED"
fi
echo
echo "--------------------"
echo "content from stderr:"
echo
cat STDERR ;
